Questions-

1.	How have if-blocks been translated into GIMPLE statements? Can you differentiate between conditional and unconditional gotos?
Ans- If-blocks are translated into conditional gotos in GIMPLE. The difference between conditional and unconditional gotos is conditional gotos always have two labels for the taken and
 not taken branches and unconditional gotos are by themselves on a line.

2.	Repeat the above compilation, but now asking for another dump that of the pass "cfg".  View this pass and say whether this representation makes it easier to read and understand
 GIMPLEs. Draw the control-flow graph of the program A-2.c on a piece of paper by looking at the CFG dump.
Ans- It is bit easier to see the control flow in this representation, but slightly less concise in terms of number of lines.

                                                                                                              
Additional Questions-
1.	Try to figure out how GCC handles the ternary operator [a? b: c] in GIMPLE.

f ()
{
  int iftmp.0;
  int a;
  int b;
  int c;

  a = Z;
  if (a <= 9) goto <D.1801>; else goto <D.1802>;
  <D.1801>:
  b = 5;
  c = 17;
  goto <D.1803>;
  <D.1802>:
  b = 6;
  c = 20;
  if (a == 0) goto <D.1804>; else goto <D.1805>;
  <D.1804>:
  c = 0;
  <D.1805>:
  <D.1803>:
  if (a != 0) goto <D.1807>; else goto <D.1808>;
  <D.1807>:
  iftmp.0 = b;
  goto <D.1809>;
  <D.1808>:
  iftmp.0 = c;
  <D.1809>:
  Z = iftmp.0;
}

